version: '3.9'

services:
  database:
    image: postgres:16
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todo_db
    volumes:
      - ./db/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todo_db"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - backend-network

  frontend:
    build:
      context: todolist_frontend
      dockerfile: ./Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "8080:5173"
    networks:
      - frontend-network

  backend-auth:
    build:
      context: todolist_backend
      dockerfile: ./Dockerfile-auth
    container_name: backend-auth
    restart: always
    ports:
      - "5001:5001"
    depends_on:
      database:
        condition: service_healthy
        restart: true
    environment:
      - POSTGRES_URL=postgresql://postgres:password@database:5432/todo_db
      - JWT_SECRET_KEY=our_jwt_secret_key
    networks:
      - backend-network

  backend-app:
    build:
      context: todolist_backend
      dockerfile: ./Dockerfile-app
    container_name: backend-app
    restart: always
    ports:
      - "5000:5000"
    depends_on:
      - database
    environment:
      - POSTGRES_URL=postgresql://postgres:password@database:5432/todo_db
      - JWT_SECRET_KEY=our_jwt_secret_key
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
